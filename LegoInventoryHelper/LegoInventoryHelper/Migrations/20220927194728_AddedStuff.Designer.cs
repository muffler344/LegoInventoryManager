// <auto-generated />
using System;
using LegoInventoryHelper.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegoInventoryHelper.Migrations
{
    [DbContext(typeof(LegoInventoryContext))]
    [Migration("20220927194728_AddedStuff")]
    partial class AddedStuff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("LegoInventoryHelper.DatabaseContext.Entities.LegoInventoryItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsSellable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfParts")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PriceBought")
                        .HasColumnType("REAL");

                    b.Property<double>("PriceSold")
                        .HasColumnType("REAL");

                    b.Property<string>("SetID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ThemeID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("YearOfRelease")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("ThemeID");

                    b.ToTable("LegoInventoryItems");
                });

            modelBuilder.Entity("LegoInventoryHelper.DatabaseContext.Entities.Price", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AveragePrice")
                        .HasColumnType("REAL");

                    b.Property<int?>("LegoInventoryItemID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("MaxPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("MinPrice")
                        .HasColumnType("REAL");

                    b.Property<double>("QuantityAveragePrice")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SetID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("LegoInventoryItemID");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("LegoInventoryHelper.DatabaseContext.Entities.Theme", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ThemeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Themes");
                });

            modelBuilder.Entity("LegoInventoryHelper.DatabaseContext.Entities.LegoInventoryItem", b =>
                {
                    b.HasOne("LegoInventoryHelper.DatabaseContext.Entities.Theme", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("LegoInventoryHelper.DatabaseContext.Entities.Price", b =>
                {
                    b.HasOne("LegoInventoryHelper.DatabaseContext.Entities.LegoInventoryItem", null)
                        .WithMany("Prices")
                        .HasForeignKey("LegoInventoryItemID");
                });

            modelBuilder.Entity("LegoInventoryHelper.DatabaseContext.Entities.LegoInventoryItem", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
